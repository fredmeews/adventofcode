* 2019
** Puzzle 1 - fuel counter upper
*** fuel_for_module = floor(mass / 3) - 2 
*** Total Fuel Requirements
**** Individually calculate the fuel needed for the mass of each module (your puzzle input)
**** Then add together all the fuel values
*** Inputs

** Puzzle 2 - opcodes
*** CODES MEANINGS
**** 1- ADDS together numbers read from two positions and stores the result in a third position
***** The three integers immediately after the opcode tell you these three positions
****** First two - indicate positions from which you should read the input values
****** Third - indicates the position at which the output should be stored
**** 2- Same as "1" except it MULTIPLIES 
**** 99 - program terminating

*** Once you're done processing an opcode, move to the next one by stepping forward 4 positions.

*** Execution
**** Replace position 1 with the value 12 
**** Replace position 2 with the value 2
**** RUN
**** What value is left at position 0 after the program halts?

*** Part Two - determine what pair of inputs produces the output 19690702
**** the value placed in address 1 is called the noun
**** the value placed in address 2 is called the verb. 
**** Each of the two input values will be between 0 and 99, inclusive

    Once the program has halted, its output is available at address 0, also just like before. Each time you try a pair of inputs, make sure you first reset the computer's memory to the values in the program (your puzzle input) - in other words, don't reuse memory from a previous attempt.

    Find the input noun and verb that cause the program to produce the output 19690720. What is 100 * noun + verb? (For example, if noun=12 and verb=2, the answer would be 1202.)
** Puzzle 3 - shortest path
** Puzzle 4 - password
*** INPUTS: 235741-706948
*** Criteria
**** 6 digit number
***** Within the range given in your puzzle input
**** Two adjacent digits are the same (like 22 in 122345)
**** From left to right digits only ever increase or stay the same (like 111123 or 135679)

   

